{"version":3,"file":"index.modern.js","sources":["../src/lib/Util.js","../src/lib/TrashIcon.js","../src/lib/Spline.js","../src/lib/NodeInputListItem.js","../src/lib/NodeInput.js","../src/lib/NodeOutputListItem.js","../src/lib/NodeOutputList.js","../src/lib/Node.js","../src/index.js"],"sourcesContent":["/* not bound to style, should be computed */\r\n\r\nexport function computeInOffsetByIndex(x,y,index) {\r\n\tlet outx = x + 15;\r\n\tlet outy = y + 47 + (index * 20);\r\n\r\n\treturn {x:outx, y:outy};\r\n}\r\n\r\nexport function computeOutOffsetByIndex(x,y,index) {\r\n\r\n\tlet outx = x + 166;\r\n\tlet outy = y + 49 + (index * 22);\r\n\r\n\treturn {x:outx, y:outy};\r\n\r\n}","import React from 'react';\r\n\r\nexport const TrashIcon = ({\r\n    onClick,\r\n    position\r\n}) => {\r\n    const handleClick = e => {\r\n        if (onClick) {\r\n            onClick(e);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <g className={\"trash-icon\"} fill={\"none\"} stroke={\"none\"} strokeWidth={\"1\"}\r\n           transform={`translate(${position.x - 6},${position.y + 15})`}\r\n           onClick={handleClick}\r\n        >\r\n            <circle className={\"trash-icon-bg\"} cx={7} cy={7} r={\"14\"} fill={\"#337AB7\"} />\r\n            <g className={\"trash-icon-trashcan\"} fill={\"#FFFFFF\"} transform={\"translate(-336.00000, -192.000000)\"}>\r\n                <path d=\"M347.999959,195 L350,195 L350,196 L349,196 L349,207.001498 C349,207.552511 348.554265,208 348.004423,208 L338.995577,208 C338.444837,208 338,207.552955 338,207.001498 L338,196 L337,196 L337,195 L338.995577,195 L339.000042,195 L339,194.990631 L339,193.009369 C339,192.443353 339.446616,192 339.997545,192 L347.002455,192 C347.553689,192 348,192.45191 348,193.009369 L348,194.990631 Z M340,194 L340,195 L347,195 L347,194 C347,193.447715 346.552285,193 346,193 L341,193 C340.447715,193 340,193.447715 340,194 Z M339,196 L339,207 L348,207 L348,196 Z M341,197 L342,197 L342,206 L341,206 Z M343,197 L344,197 L344,206 L343,206 Z M345,197 L345,206 L346,206 L346,197 L345,197 Z M345,197\" id=\"Rectangle 159\"/>\r\n            </g>\r\n        </g>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport onClickOutside from 'react-onclickoutside';\r\n\r\nimport { TrashIcon } from './TrashIcon';\r\n\r\nconst Spline = ({\r\n    mousePos,\r\n    onClick,\r\n    onClickOutside,\r\n    onRemove,\r\n    end,\r\n    start\r\n}) => {\r\n    const [selected, setSelected] = useState(false);\r\n    const [position, setPosition] = useState({ x: 0, y: 0 });\r\n\r\n    const bezierCurve = (a, b, cp1x, cp1y, cp2x, cp2y, x, y) => {\r\n        return `M ${a} ${b} C ${cp1x} ${cp1y} ${cp2x} ${cp2y} ${x} ${y}`;\r\n    }\r\n\r\n    const distance = (a, b) => {\r\n        return Math.sqrt(\r\n            (b[0] - a[0]) * (b[0] - a[0]) + (b[1] - a[1]) * (b[1] - a[1])\r\n        )\r\n    }\r\n\r\n    const handleClick = e => {\r\n        setSelected(old => !old);\r\n        setPosition(old => {\r\n            return {...old, ...mousePos}\r\n        });\r\n\r\n        if (onClick) {\r\n            onClick(e);\r\n        }\r\n    }\r\n\r\n    Spline.handleClickOutside = e => {\r\n        setSelected(false);\r\n\r\n        if (onClickOutside) {\r\n            onClickOutside(e);\r\n        }\r\n    }\r\n\r\n    const handleRemove = e => {\r\n        setSelected(false);\r\n\r\n        if (onRemove) {\r\n            onRemove(e);\r\n        }\r\n    }\r\n\r\n    let dist = distance(\r\n                [start.x, start.y],\r\n                [end.x, end.y]);\r\n    let pathString = bezierCurve(start.x,\r\n                                 start.y,\r\n                                 start.x + dist * 0.25,\r\n                                 start.y,\r\n                                 end.x - dist * 0.75,\r\n                                 end.y,\r\n                                 end.x,\r\n                                 end.y);\r\n    let className = `connector ${selected ? ' selected' : ''}`;\r\n\r\n    return (\r\n        <g>\r\n            <circle cx={start.x} cy={start.y} r={\"3\"} fill={\"#337ab7\"} />\r\n            <circle cx={end.x} cy={end.y} r={\"3\"} fill={\"#9191A8\"} />\r\n            <path className={\"connector-click-area\"} d={pathString} onClick={handleClick} />\r\n            <path className={className} d={pathString} onClick={handleClick} />\r\n            { selected ?\r\n                <TrashIcon position={position}\r\n                           onClick={handleRemove}\r\n                />    \r\n            : null }\r\n        </g>\r\n    );\r\n}\r\n\r\nconst handleClickConfig = {\r\n    handleClickOutside: () => Spline.handleClickOutside\r\n}\r\n\r\nexport default onClickOutside(Spline, handleClickConfig);","import React, { useState } from 'react';\r\n\r\nexport const NodeInputListItem = ({\r\n    onMouseUp,\r\n    index,\r\n    item\r\n}) => {\r\n    const [hover, setHover] = useState(false);\r\n\r\n    const handleOnMouseUp = e => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n\r\n        onMouseUp(index);\r\n    }\r\n\r\n    const onMouseOver = () => {\r\n        setHover(true);\r\n    }\r\n\r\n    const onMouseOut = () => {\r\n        setHover(false);\r\n    }\r\n\r\n    const noop = e => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <li>\r\n            <a onClick={noop} onMouseUp={handleOnMouseUp} href={\"#\"}>\r\n                <i className={hover ? 'fa fa-circle-o hover' : 'fa fa-circle-o'}\r\n                   onMouseOver={onMouseOver}\r\n                   onMouseOut={onMouseOut}\r\n                ></i>\r\n                { item.name }\r\n            </a>\r\n        </li>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport { NodeInputListItem } from './NodeInputListItem';\r\n\r\nexport const NodeInputList = ({\r\n    items,\r\n    onCompleteConnector\r\n}) => {\r\n    const onMouseUp = i => {\r\n        onCompleteConnector(i);\r\n    }\r\n\r\n    let i = 0;\r\n\r\n    return (\r\n        <div className={\"nodeInputWrapper\"}>\r\n            <ul className={\"nodeInputList\"}>\r\n                {items.map(item => {\r\n                    return <NodeInputListItem\r\n                                onMouseUp={i => onMouseUp(i)}\r\n                                key={i}\r\n                                index={i++}\r\n                                item={item}/>\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport const NodeOutputListItem = ({\r\n    onMouseDown,\r\n    index,\r\n    item\r\n}) => {\r\n    const handleOnMouseDown = e => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n\r\n        onMouseDown(index);\r\n    }\r\n\r\n    const noop = e => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <li onMouseDown={handleOnMouseDown}>\r\n            <a href={\"#\"} onClick={noop}>\r\n                { item.name }\r\n                <i className={\"fa fa-circle-o\"}></i>\r\n            </a>\r\n        </li>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport { NodeOutputListItem } from './NodeOutputListItem';\r\n\r\nexport const NodeOutputList = ({\r\n    onStartConnector,\r\n    items\r\n}) => {\r\n    const onMouseDown = i => {\r\n        onStartConnector(i);\r\n    }\r\n\r\n    let i = 0;\r\n\r\n    return (\r\n        <div className={\"nodeOutputWrapper\"}>\r\n            <ul className={\"nodeOutputList\"}>\r\n                {items.map(item => {\r\n                    return <NodeOutputListItem \r\n                                onMouseDown={i => onMouseDown(i)}\r\n                                key={i}\r\n                                index={i++}\r\n                                item={item} />\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport onClickOutside from 'react-onclickoutside';\r\nimport Draggable from 'react-draggable';\r\n\r\nimport { NodeInputList } from './NodeInput';\r\nimport { NodeOutputList } from './NodeOutputList';\r\n\r\nconst DragNode = ({ \r\n    onNodeDeselect,\r\n    onNodeSelect,\r\n    onNodeStart,\r\n    onNodeStop,\r\n    onNodeMove,\r\n    onStartConnector,\r\n    onCompleteConnector,\r\n    index,\r\n    inputs,\r\n    outputs,\r\n    nid,\r\n    pos,\r\n    title\r\n}) => {\r\n    const [selected, setSelected] = useState(false);\r\n\r\n    const handleDragStart = (eve, ui) => {\r\n        onNodeStart(nid, ui);\r\n    }\r\n\r\n    const handleDragStop = (eve, ui) => {\r\n        onNodeStop(nid, {x: ui.x, y: ui.y});\r\n    }\r\n\r\n    const handleDrag = (eve, ui) => {\r\n        // console.log(ui);\r\n        onNodeMove(index, {x: ui.x, y: ui.y});\r\n    }\r\n\r\n    const handleOnStartConnector = idx => {\r\n        onStartConnector(nid, idx);\r\n    }\r\n\r\n    const handleOnCompleteConnector = idx => {\r\n        onCompleteConnector(nid, idx);\r\n    }\r\n\r\n    const handleClick = e => {\r\n        setSelected(true);\r\n        if (onNodeSelect) {\r\n            onNodeSelect(nid);\r\n        }\r\n    }\r\n\r\n    DragNode.handleClickOutside = () => {\r\n        if (onNodeDeselect && selected) {\r\n            onNodeDeselect(nid);\r\n        }\r\n        setSelected(false);\r\n    }\r\n\r\n    let nodeClass = `node ${selected ? ' selected' : ''}`\r\n\r\n    return (\r\n        <div onDoubleClick={e => handleClick(e)}>\r\n            <Draggable\r\n                position={{ x: pos.x, y: pos.y }}\r\n                handle={\".node-header\"}\r\n                onStart={(eve, ui) => handleDragStart(eve, ui)}\r\n                onStop={(eve, ui) => handleDragStop(eve, ui)}\r\n                onDrag={(eve, ui) => handleDrag(eve, ui)}>\r\n                <section className={nodeClass} style={{zIndex: 10000}}>\r\n                    <header className={\"node-header\"}>\r\n                        <span className={\"node-title\"}>{title}</span>\r\n                    </header>\r\n                    <div className={\"node-content\"}>\r\n                        <NodeInputList \r\n                            items={inputs}\r\n                            onCompleteConnector={idx => handleOnCompleteConnector(idx)} />\r\n                        <NodeOutputList\r\n                            items={outputs}\r\n                            onStartConnector={idx => handleOnStartConnector(idx)} />\r\n                    </div>\r\n                </section>\r\n            </Draggable>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst handleClickConfig = {\r\n    handleClickOutside: () => DragNode.handleClickOutside\r\n}\r\n\r\nexport default onClickOutside(DragNode, handleClickConfig);","import React, { useState, useRef } from 'react';\r\nimport { computeOutOffsetByIndex, computeInOffsetByIndex } from './lib/Util';\r\n// import { SVGComponent } from './lib-hooks/svgComp-hooks';\r\nimport Spline from './lib/Spline';\r\nimport DragNode from './lib/Node';\r\n\r\nexport const ReactNodeGraphHook = ({\r\n    data,\r\n    setData,\r\n    onNodeDeselect,\r\n    onNodeMove,\r\n    onNodeStartMove,\r\n    onNodeSelect,\r\n    onNewConnector,\r\n    onRemoveConnector\r\n}) => {\r\n    const [source, setSource] = useState([]);\r\n    const [dragging, setDragging] = useState(false);\r\n    const [mousePos, setMousePos] = useState({x: 0, y: 0});\r\n\r\n    const svgRef = useRef();\r\n\r\n    const onMouseMove = e => {\r\n        let [pX, pY] = [e.clientX, e.clientY];\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n\r\n        const svgRect = svgRef.current.getBoundingClientRect();\r\n        // console.log(svgRect);\r\n        setMousePos(old => {\r\n            return {\r\n                ...old,\r\n                ...{x: pX - svgRect.left, y: pY - svgRect.top}\r\n            }\r\n        });\r\n    }\r\n\r\n    const onMouseUp = e => {\r\n        setDragging(false);\r\n    }\r\n\r\n    const handleNodeStart = nid => {\r\n        onNodeStartMove(nid);\r\n    }\r\n\r\n    const handleNodeStop = (nid, pos) => {\r\n        onNodeMove(nid, pos);\r\n    }\r\n\r\n    const handleNodeMove = (idx, pos) => {\r\n        let dataT = data;\r\n        dataT.nodes[idx].x = pos.x;\r\n        dataT.nodes[idx].y = pos.y;\r\n\r\n        // console.log(dataT);\r\n        // console.log({...data,...dataT});\r\n        setData(old => {\r\n            return {\r\n                ...old, \r\n                ...dataT\r\n            }\r\n        });\r\n    }\r\n\r\n    const handleStartConnector = (nid, outputIdx) => {\r\n        let newSrc = [nid, outputIdx];\r\n\r\n        setDragging(true);\r\n        setSource(newSrc); // Not sure if this will work...\r\n    }\r\n\r\n    const handleCompleteConnector = (nid, inputIdx) => {\r\n        if (dragging) {\r\n            let fromNode = getNodeById(data.nodes, source[0]);\r\n            let fromPinName = fromNode.fields.out[source[1]].name;\r\n            let toNode = getNodeById(data.nodes, nid);\r\n            let toPinName = toNode.fields.in[inputIdx].name;\r\n\r\n            onNewConnector(fromNode.nid, fromPinName, toNode.nid, toPinName);\r\n        }\r\n        setDragging(false);\r\n    }\r\n\r\n    const handleRemoveConnector = connector => {\r\n        if (onRemoveConnector) {\r\n            onRemoveConnector(connector);\r\n        }\r\n    }\r\n\r\n    const handleNodeSelect = nid => {\r\n        if (onNodeSelect) {\r\n            onNodeSelect(nid);\r\n        }\r\n    }\r\n\r\n    const handleNodeDeselect = nid => {\r\n        if (onNodeDeselect) {\r\n            onNodeDeselect(nid);\r\n        }\r\n    }\r\n\r\n    const computePinIdxfromLabel = (pins, pinLabel) => {\r\n        let reval = 0;\r\n\r\n        for (let pin of pins) {\r\n            if (pin.name === pinLabel) {\r\n                return reval;\r\n            } else {\r\n                reval++;\r\n            }\r\n        }\r\n    }\r\n\r\n    const getNodeById = (nodes, nid) => {\r\n        let reval = 0;\r\n\r\n        for(const node of nodes) {\r\n            if (node.nid === nid) {\r\n                return nodes[reval];\r\n            } else {\r\n                reval++;\r\n            }\r\n        }\r\n    }\r\n\r\n    let newConn = null;\r\n    let i = 0;\r\n\r\n    // console.log(dragging);\r\n    if (dragging) {\r\n        let sourceNode = getNodeById(data.nodes, source[0]);\r\n        let connectorStart = computeOutOffsetByIndex(sourceNode.x, sourceNode.y, source[1]);\r\n        let connectorEnd = {\r\n            x: mousePos.x,\r\n            y: mousePos.y\r\n        };\r\n\r\n        // console.log(mousePos);\r\n        newConn = <Spline\r\n                    start={connectorStart}\r\n                    end={connectorEnd}\r\n                  />\r\n    }\r\n\r\n    let splineIdx = 0;\r\n\r\n    return (\r\n        <div className={dragging ? 'dragging' : ''} \r\n              onMouseMove={onMouseMove}\r\n              onMouseUp={onMouseUp}\r\n        >\r\n            {data.nodes.map(node => {\r\n                // console.log(node);\r\n                return <DragNode\r\n                            index={i++}\r\n                            nid={node.nid}\r\n                            title={node.type}\r\n                            inputs={node.fields.in}\r\n                            outputs={node.fields.out}\r\n                            pos={{x: node.x, y: node.y}}\r\n                            key={node.nid}\r\n\r\n                            onNodeStart={nid => handleNodeStart(nid)}\r\n                            onNodeStop={(nid, pos) => handleNodeStop(nid, pos)}\r\n                            onNodeMove={(idx, pos) => handleNodeMove(idx, pos)}\r\n\r\n                            onStartConnector={(nid, outputIdx) => handleStartConnector(nid, outputIdx)}\r\n                            onCompleteConnector={(nid, inputIdx) => handleCompleteConnector(nid, inputIdx)}\r\n\r\n                            onNodeSelect={nid => handleNodeSelect(nid)}\r\n                            onNodeDeselect={nid => handleNodeDeselect(nid)}\r\n                       />\r\n            })}\r\n            <svg style={{position: 'absolute', height: \"100%\", width: \"100%\", zIndex: 9000}} \r\n                 ref={svgRef}>\r\n                {data.connections.map(connector => {\r\n                    // console.log(data);\r\n                    // console.log(connector);\r\n                    let fromNode = getNodeById(data.nodes, connector.from_node);\r\n                    let toNode = getNodeById(data.nodes, connector.to_node);\r\n\r\n                    let splinestart = computeOutOffsetByIndex(fromNode.x, fromNode.y, computePinIdxfromLabel(fromNode.fields.out, connector.from));\r\n                    let splineend = computeInOffsetByIndex(toNode.x, toNode.y, computePinIdxfromLabel(toNode.fields.in, connector.to));\r\n\r\n                    return <Spline\r\n                            start={splinestart}\r\n                            end={splineend}\r\n                            key={splineIdx++}\r\n                            mousePos={mousePos}\r\n                            onRemove={() => handleRemoveConnector(connector)}\r\n                    />\r\n                })}\r\n                {newConn}\r\n            </svg>\r\n        </div>\r\n    );\r\n}"],"names":["computeInOffsetByIndex","x","y","index","outx","outy","computeOutOffsetByIndex","TrashIcon","onClick","position","handleClick","e","Spline","mousePos","onClickOutside","onRemove","end","start","selected","setSelected","useState","setPosition","bezierCurve","a","b","cp1x","cp1y","cp2x","cp2y","distance","Math","sqrt","old","handleClickOutside","handleRemove","dist","pathString","className","handleClickConfig","NodeInputListItem","onMouseUp","item","hover","setHover","handleOnMouseUp","stopPropagation","preventDefault","onMouseOver","onMouseOut","noop","name","NodeInputList","items","onCompleteConnector","i","map","NodeOutputListItem","onMouseDown","handleOnMouseDown","NodeOutputList","onStartConnector","DragNode","onNodeDeselect","onNodeSelect","onNodeStart","onNodeStop","onNodeMove","inputs","outputs","nid","pos","title","handleDragStart","eve","ui","handleDragStop","handleDrag","handleOnStartConnector","idx","handleOnCompleteConnector","nodeClass","zIndex","ReactNodeGraphHook","data","setData","onNodeStartMove","onNewConnector","onRemoveConnector","source","setSource","dragging","setDragging","setMousePos","svgRef","useRef","onMouseMove","pX","pY","clientX","clientY","svgRect","current","getBoundingClientRect","left","top","handleNodeStart","handleNodeStop","handleNodeMove","dataT","nodes","handleStartConnector","outputIdx","newSrc","handleCompleteConnector","inputIdx","fromNode","getNodeById","fromPinName","fields","out","toNode","toPinName","in","handleRemoveConnector","connector","handleNodeSelect","handleNodeDeselect","computePinIdxfromLabel","pins","pinLabel","reval","pin","node","newConn","sourceNode","connectorStart","connectorEnd","splineIdx","type","height","width","connections","from_node","to_node","splinestart","from","splineend","to"],"mappings":"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"}